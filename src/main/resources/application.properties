spring.cloud.stream.binders.example-rabbit.type=rabbit

# applicative binding
spring.cloud.stream.bindings.process-in-0.destination=example
spring.cloud.stream.bindings.process-in-0.group=default
spring.cloud.stream.bindings.process-in-0.binder=example-rabbit

spring.cloud.stream.bindings.process-out-0.destination=success
spring.cloud.stream.bindings.process-out-0.producer.required-groups=default
spring.cloud.stream.bindings.process-out-0.binder=example-rabbit

# Exchange where messages are routed after ttl expiration
retry.router-exchange-name=retry_router

# routing key used to bind the router to the input channel
retry.retry-routing-key=${spring.cloud.stream.bindings.process-in-0.destination}

# error binding
# not needed as with dynamic destinations, "the destination itself becomes an output binding at runtime"
# https://github.com/spring-cloud/spring-cloud-stream/issues/1909#issuecomment-584916748
# spring.cloud.stream.bindings.parking.destination=parking
spring.cloud.stream.bindings.parking.producer.required-groups=default
spring.cloud.stream.bindings.parking.binder=${spring.cloud.stream.bindings.process-in-0.binder}
retry.parking-exchange-name=parking


# Exchange where messages are routed after each retry
retry.input-exchange-name=${spring.cloud.stream.bindings.process-in-0.destination}

# retry destinations
retry.delay-group-name=default
retry.delay-channels.delay1.waiting-time=1000
retry.delay-channels.delay1.destination-name=delay1
retry.delay-channels.delay2.waiting-time=10000
retry.delay-channels.delay2.destination-name=delay2

spring.cloud.stream.bindings.log.destination=log
spring.cloud.stream.bindings.log.producer.required-groups=default
spring.cloud.stream.bindings.log.binder=example-rabbit

spring.cloud.function.definition=process
